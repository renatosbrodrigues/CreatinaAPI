// <auto-generated />
using CreatinaAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CreatinaAPI.Migrations
{
    [DbContext(typeof(CreatinaAPIContext))]
    [Migration("20231002190338_UpdateUserModel")]
    partial class UpdateUserModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CreatinaAPI.Models.Creatine", b =>
                {
                    b.Property<int>("CreatineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CreatineId"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<double>("DailyDose")
                        .HasColumnType("double precision");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<double>("WarningAmount")
                        .HasColumnType("double precision");

                    b.HasKey("CreatineId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Creatines");
                });

            modelBuilder.Entity("CreatinaAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CreatinaAPI.Models.Creatine", b =>
                {
                    b.HasOne("CreatinaAPI.Models.User", "User")
                        .WithOne("Creatine")
                        .HasForeignKey("CreatinaAPI.Models.Creatine", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CreatinaAPI.Models.HourMinute", "WarningTime", b1 =>
                        {
                            b1.Property<int>("CreatineId")
                                .HasColumnType("integer");

                            b1.Property<int>("Hour")
                                .HasColumnType("integer");

                            b1.Property<int>("Minute")
                                .HasColumnType("integer");

                            b1.HasKey("CreatineId");

                            b1.ToTable("Creatines");

                            b1.WithOwner()
                                .HasForeignKey("CreatineId");
                        });

                    b.Navigation("User");

                    b.Navigation("WarningTime")
                        .IsRequired();
                });

            modelBuilder.Entity("CreatinaAPI.Models.User", b =>
                {
                    b.Navigation("Creatine");
                });
#pragma warning restore 612, 618
        }
    }
}
